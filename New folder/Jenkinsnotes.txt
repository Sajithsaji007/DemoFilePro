Now let us install Jenkins on the centos-host machine and configure it to run on port 8090 instead of the default port 8080.
You can refer to the Jenkins Installation Docs located above the terminal.
steps:-
-sudo yum install epel-release -y
-sudo yum install java-11-openjdk -y
-sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo --no-check-certificate
-sudo rpm --import http://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
-sudo yum install jenkins -y

Edit /lib/systemd/system/jenkins.service file and change Jenkins port to 8090 by updating Environment="JENKINS_PORT=" variable value.
-sudo vi /lib/systemd/system/jenkins.service

Environment="JENKINS_PORT=8090"
Once done start Jenkins service.
-sudo systemctl start jenkins


The user called mike has also been created in the jenkins-server.
root@jenkins-server:~# id mike
uid=1001(mike) gid=1002(mike) groups=1002(mike),27(sudo)
root@jenkins-server:~# 
Switch to this user by running the below command:
root@jenkins-server:~# su - mike 
mike@jenkins-server:~$


To do this, copy the public key to the clipboard.
mike@jenkins-server:~$ cat .ssh/jenkins_key.pub 
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQClraYlzfxuFDiL1a+7njJlrap6kzvFhWNQ4PYVQfCzfUvED6WPGXCu3ZAqMqpOLHEQkBa+hPuB+0VPZ4GMCjyxzR9YbqgxHQV44KdEUTv52KqZa5xpH0kR0CslGzXrJfEyOjx+rG/JIq0Pj0MtgnIoclqpIoa9Vdg0yUtiioqpoKcI73nbVhxd24auUKhz+LXngzuhSwEU1Dd7NuVVfiDjh4vxjVJYfIlhxQ9gYMUwiFsQsavyLPDQF9Q5/r/wS+YIMaOTmWcSdh4Cw8zQNDJ3vvHr0xdqfua9WMo/JodAEH4w0FfHcBJbz7dZA3WLsEF/aV+TBs6bFzE/FRwJkMlAfUGzbqt/Xf/JlCxc81yssZS+dQ4BkyQ07NuBdB3tES27It6LqR3P1j311NF5ZMU4kqjjCPfam3KnHxRw51BV7PWYh1M+MS3uxLhuY4SLniOpucJwKajuzDJkKbWRg63aj7BO8OUhVQMiuWSnRt473c7LRW5NaUhHdAyvbyw6vFs= mike@jenkins-server
mike@jenkins-server:~$ 
Next, add this key for the user (Navigate to People --> mike --> Configure --> SSH Public Keys)

We have configured the SSH service in Jenkins to listen on a fixed port. To find out the port in use, run the command below:
curl -Lv http://localhost:8085/login 2>&1 | grep -i 'x-ssh-endpoint'






Now that we have the port used by the Jenkins SSH server, let us begin interacting with Jenkins over ssh with the user mike.

As mike, try running the following commands:

mike@jenkins-server:~$ ssh -i /home/mike/.ssh/jenkins_key -l mike -p 8022 jenkins-server help

Keep a note of the options used with the SSH command:

-i flag is used to point to mike's private SSH key. Remember, we have already added the public key in the Jenkins configuration.
-l is the login user which in our example is mike
-p is the port which we found out in the previous step to be 8022





Uninstall the AWS Batch plugin you just upgraded in the previous question.

Follow below given steps:

1: Login into Jenkins UI

2: Go to Manage Jenkins

3: Click on Plugins

4: Then look for AWS Batch plugin under Installed section and click on Uninstall.

5: Now click on Yes.


You need to restart the Jenkins to completely remove the plugin:

1: Either restart from the UI itself by entering below given URL in the browser

<jenkins-url>/restart and click on Yes to confirm.

2: Other way is using Jenkins CLI, for that run below given command from the terminal:

java -jar jenkins-cli.jar -s http://localhost:8085 -auth 'admin:A





Install the Bitbucket Branch Source plugin using the Jenkins CLI.
Execute below given command:

-java -jar jenkins-cli.jar -s http://localhost:8085 -auth 'admin:Adm!n321' install-plugin cloudbees-bitbucket-branch-source
Then restart Jenkins service:
-sudo service jenkins restart


Upgrade the cloud-stats plugin to the latest available version using the Jenkins CLI.
Execute below given command:
-java -jar jenkins-cli.jar -s http://localhost:8085 -auth 'admin:Adm!n321' install-plugin cloud-stats
Make sure to restart jenkins service:
-sudo service jenkins restart


Disable the github plugin using the Jenkins CLI.
Execute below given command:
java -jar jenkins-cli.jar -s http://localhost:8085 -auth 'admin:Adm!n321' disable-plugin github -restart -r